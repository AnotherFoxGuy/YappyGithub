{"meta":{"version":13,"date":1477144600928},"classes":[{"id":"ChannelConf","name":"ChannelConf","description":"A channel configuration class to add, set, delete repo events config from channels","meta":{"line":29,"file":"ChannelConf.js","path":"lib"},"extends":["Collection"],"methods":[{"id":"ChannelConf#init","name":"init","description":"Inits the channel configuration by getting database rows and setting them to `channelconf` variable","memberof":"ChannelConf","meta":{"line":35,"file":"ChannelConf.js","path":"lib"},"returns":{},"params":[]},{"id":"ChannelConf#add","name":"add","description":"Add a channel's webhooks repo thingy","memberof":"ChannelConf","meta":{"line":62,"file":"ChannelConf.js","path":"lib"},"returns":{"types":[[["null",""]]]},"params":[{"name":"channel_id","description":"The channel id for the repo's webhooks","type":{"types":[[["String",""]]]}},{"name":"repo","description":"The repo's full name, i.e. hydrabolt/discord.js","type":{"types":[[["String",""]]]}}]},{"id":"ChannelConf#get","name":"get","description":"Get all the channels for a specific repo","memberof":"ChannelConf","meta":{"line":81,"file":"ChannelConf.js","path":"lib"},"returns":{"types":[[["Array",".<"],["Object",">"]]]},"params":[{"name":"repo","description":"The repo's full name to look up","type":{"types":[[["String",""]]]}}]},{"id":"ChannelConf#destroy","name":"destroy","description":"Delete a spefic channel's repo configuration","memberof":"ChannelConf","meta":{"line":90,"file":"ChannelConf.js","path":"lib"},"returns":{"types":[[["Promise",".<"],["Collection",">"]]]},"params":[{"name":"channel_id","description":"The channel id for which to delete the info","type":{"types":[[["String",""]]]}}]},{"id":"ChannelConf#array","name":"array","description":"Creates an ordered array of the values of this collection, and caches it internally. The array will only be\nreconstructed if an item is added to or removed from the collection, or if you add/remove elements on the array.","memberof":"ChannelConf","examples":["// identical to:\nArray.from(collection.values());"],"inherits":"Collection#array","inherited":true,"meta":{"line":32,"file":"Collection.js","path":"lib"},"returns":{"types":[[["Array",""]]]},"params":[]},{"id":"ChannelConf#keyArray","name":"keyArray","description":"Creates an ordered array of the keys of this collection, and caches it internally. The array will only be\nreconstructed if an item is added to or removed from the collection, or if you add/remove elements on the array.","memberof":"ChannelConf","examples":["// identical to:\nArray.from(collection.keys());"],"inherits":"Collection#keyArray","inherited":true,"meta":{"line":45,"file":"Collection.js","path":"lib"},"returns":{"types":[[["Array",""]]]},"params":[]},{"id":"ChannelConf#first","name":"first","description":"Returns the first item in this collection.","memberof":"ChannelConf","inherits":"Collection#first","inherited":true,"meta":{"line":54,"file":"Collection.js","path":"lib"},"returns":{"types":[["*",""]]},"params":[]},{"id":"ChannelConf#firstKey","name":"firstKey","description":"Returns the first key in this collection.","memberof":"ChannelConf","inherits":"Collection#firstKey","inherited":true,"meta":{"line":62,"file":"Collection.js","path":"lib"},"returns":{"types":[["*",""]]},"params":[]},{"id":"ChannelConf#last","name":"last","description":"Returns the last item in this collection. This is a relatively slow operation,\nsince an array copy of the values must be made to find the last element.","memberof":"ChannelConf","inherits":"Collection#last","inherited":true,"meta":{"line":71,"file":"Collection.js","path":"lib"},"returns":{"types":[["*",""]]},"params":[]},{"id":"ChannelConf#lastKey","name":"lastKey","description":"Returns the last key in this collection. This is a relatively slow operation,\nsince an array copy of the keys must be made to find the last element.","memberof":"ChannelConf","inherits":"Collection#lastKey","inherited":true,"meta":{"line":81,"file":"Collection.js","path":"lib"},"returns":{"types":[["*",""]]},"params":[]},{"id":"ChannelConf#random","name":"random","description":"Returns a random item from this collection. This is a relatively slow operation,\nsince an array copy of the values must be made to find a random element.","memberof":"ChannelConf","inherits":"Collection#random","inherited":true,"meta":{"line":91,"file":"Collection.js","path":"lib"},"returns":{"types":[["*",""]]},"params":[]},{"id":"ChannelConf#randomKey","name":"randomKey","description":"Returns a random key from this collection. This is a relatively slow operation,\nsince an array copy of the keys must be made to find a random element.","memberof":"ChannelConf","inherits":"Collection#randomKey","inherited":true,"meta":{"line":101,"file":"Collection.js","path":"lib"},"returns":{"types":[["*",""]]},"params":[]},{"id":"ChannelConf#findAll","name":"findAll","description":"Returns an array of items where `item[prop] === value` of the collection","memberof":"ChannelConf","examples":["collection.findAll('username', 'Bob');"],"inherits":"Collection#findAll","inherited":true,"meta":{"line":114,"file":"Collection.js","path":"lib"},"returns":{"types":[[["array",""]]]},"params":[{"name":"prop","description":"The property to test against","type":{"types":[[["string",""]]]}},{"name":"value","description":"The expected value","type":{"types":[["*",""]]}}]},{"id":"ChannelConf#find","name":"find","description":"Returns a single item where `item[prop] === value`, or the given function returns `true`.\nIn the latter case, this is identical to\n[Array.find()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find).","memberof":"ChannelConf","examples":["collection.find('username', 'Bob');","collection.find(val => val.username === 'Bob');"],"inherits":"Collection#find","inherited":true,"meta":{"line":136,"file":"Collection.js","path":"lib"},"returns":{"types":[["*",""]]},"params":[{"name":"propOrFn","description":"The property to test against, or the function to test with","type":{"types":[[["string",""]],[["function",""]]]}},{"name":"value","description":"The expected value - only applicable and required if using a property for the first argument","optional":true,"type":{"types":[["*",""]]}}]},{"id":"ChannelConf#findKey","name":"findKey","description":"Returns the key of the item where `item[prop] === value`, or the given function returns `true`.\nIn the latter case, this is identical to\n[Array.findIndex()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex).","memberof":"ChannelConf","examples":["collection.findKey('username', 'Bob');","collection.findKey(val => val.username === 'Bob');"],"inherits":"Collection#findKey","inherited":true,"meta":{"line":167,"file":"Collection.js","path":"lib"},"returns":{"types":[["*",""]]},"params":[{"name":"propOrFn","description":"The property to test against, or the function to test with","type":{"types":[[["string",""]],[["function",""]]]}},{"name":"value","description":"The expected value - only applicable and required if using a property for the first argument","optional":true,"type":{"types":[["*",""]]}}]},{"id":"ChannelConf#exists","name":"exists","description":"Returns true if the collection has an item where `item[prop] === value`","memberof":"ChannelConf","examples":["if (collection.exists('username', 'Bob')) {\n console.log('user here!');\n}"],"inherits":"Collection#exists","inherited":true,"meta":{"line":194,"file":"Collection.js","path":"lib"},"returns":{"types":[[["boolean",""]]]},"params":[{"name":"prop","description":"The property to test against","type":{"types":[[["string",""]]]}},{"name":"value","description":"The expected value","type":{"types":[["*",""]]}}]},{"id":"ChannelConf#filter","name":"filter","description":"Identical to\n[Array.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\nbut returns a Collection instead of an Array.","memberof":"ChannelConf","inherits":"Collection#filter","inherited":true,"meta":{"line":206,"file":"Collection.js","path":"lib"},"returns":{"types":[[["Collection",""]]]},"params":[{"name":"fn","description":"Function used to test (should return a boolean)","type":{"types":[[["function",""]]]}},{"name":"thisArg","description":"Value to use as `this` when executing function","optional":true,"type":{"types":[[["Object",""]]]}}]},{"id":"ChannelConf#map","name":"map","description":"Identical to\n[Array.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map).","memberof":"ChannelConf","inherits":"Collection#map","inherited":true,"meta":{"line":222,"file":"Collection.js","path":"lib"},"returns":{"types":[[["array",""]]]},"params":[{"name":"fn","description":"Function that produces an element of the new array, taking three arguments","type":{"types":[[["function",""]]]}},{"name":"thisArg","description":"Value to use as `this` when executing function","optional":true,"type":{"types":[["*",""]]}}]},{"id":"ChannelConf#some","name":"some","description":"Identical to\n[Array.some()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some).","memberof":"ChannelConf","inherits":"Collection#some","inherited":true,"meta":{"line":237,"file":"Collection.js","path":"lib"},"returns":{"types":[[["boolean",""]]]},"params":[{"name":"fn","description":"Function used to test (should return a boolean)","type":{"types":[[["function",""]]]}},{"name":"thisArg","description":"Value to use as `this` when executing function","optional":true,"type":{"types":[[["Object",""]]]}}]},{"id":"ChannelConf#every","name":"every","description":"Identical to\n[Array.every()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every).","memberof":"ChannelConf","inherits":"Collection#every","inherited":true,"meta":{"line":252,"file":"Collection.js","path":"lib"},"returns":{"types":[[["boolean",""]]]},"params":[{"name":"fn","description":"Function used to test (should return a boolean)","type":{"types":[[["function",""]]]}},{"name":"thisArg","description":"Value to use as `this` when executing function","optional":true,"type":{"types":[[["Object",""]]]}}]},{"id":"ChannelConf#reduce","name":"reduce","description":"Identical to\n[Array.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce).","memberof":"ChannelConf","inherits":"Collection#reduce","inherited":true,"meta":{"line":267,"file":"Collection.js","path":"lib"},"returns":{"types":[["*",""]]},"params":[{"name":"fn","description":"Function used to reduce","type":{"types":[[["function",""]]]}},{"name":"startVal","description":"The starting value","optional":true,"type":{"types":[["*",""]]}}]},{"id":"ChannelConf#concat","name":"concat","description":"Combines this collection with others into a new collection. None of the source collections are modified.","memberof":"ChannelConf","examples":["const newColl = someColl.concat(someOtherColl, anotherColl, ohBoyAColl);"],"inherits":"Collection#concat","inherited":true,"meta":{"line":279,"file":"Collection.js","path":"lib"},"returns":{"types":[[["Collection",""]]]},"params":[{"name":"collections","description":"Collections to merge","type":{"types":[[["Collection",""]]]}}]},{"id":"ChannelConf#deleteAll","name":"deleteAll","description":"If the items in this collection have a delete method (e.g. messages), invoke\nthe delete method. Returns an array of promises","memberof":"ChannelConf","inherits":"Collection#deleteAll","inherited":true,"meta":{"line":293,"file":"Collection.js","path":"lib"},"returns":{"types":[[["Array",".<"],["Promise",">"]]]},"params":[]}],"properties":[],"events":[]},{"id":"Collection","name":"Collection","description":"A utility class to help make it easier to access the data stores","meta":{"line":5,"file":"Collection.js","path":"lib"},"extends":["Map"],"methods":[{"id":"Collection#array","name":"array","description":"Creates an ordered array of the values of this collection, and caches it internally. The array will only be\nreconstructed if an item is added to or removed from the collection, or if you add/remove elements on the array.","memberof":"Collection","examples":["// identical to:\nArray.from(collection.values());"],"meta":{"line":32,"file":"Collection.js","path":"lib"},"returns":{"types":[[["Array",""]]]},"params":[]},{"id":"Collection#keyArray","name":"keyArray","description":"Creates an ordered array of the keys of this collection, and caches it internally. The array will only be\nreconstructed if an item is added to or removed from the collection, or if you add/remove elements on the array.","memberof":"Collection","examples":["// identical to:\nArray.from(collection.keys());"],"meta":{"line":45,"file":"Collection.js","path":"lib"},"returns":{"types":[[["Array",""]]]},"params":[]},{"id":"Collection#first","name":"first","description":"Returns the first item in this collection.","memberof":"Collection","meta":{"line":54,"file":"Collection.js","path":"lib"},"returns":{"types":[["*",""]]},"params":[]},{"id":"Collection#firstKey","name":"firstKey","description":"Returns the first key in this collection.","memberof":"Collection","meta":{"line":62,"file":"Collection.js","path":"lib"},"returns":{"types":[["*",""]]},"params":[]},{"id":"Collection#last","name":"last","description":"Returns the last item in this collection. This is a relatively slow operation,\nsince an array copy of the values must be made to find the last element.","memberof":"Collection","meta":{"line":71,"file":"Collection.js","path":"lib"},"returns":{"types":[["*",""]]},"params":[]},{"id":"Collection#lastKey","name":"lastKey","description":"Returns the last key in this collection. This is a relatively slow operation,\nsince an array copy of the keys must be made to find the last element.","memberof":"Collection","meta":{"line":81,"file":"Collection.js","path":"lib"},"returns":{"types":[["*",""]]},"params":[]},{"id":"Collection#random","name":"random","description":"Returns a random item from this collection. This is a relatively slow operation,\nsince an array copy of the values must be made to find a random element.","memberof":"Collection","meta":{"line":91,"file":"Collection.js","path":"lib"},"returns":{"types":[["*",""]]},"params":[]},{"id":"Collection#randomKey","name":"randomKey","description":"Returns a random key from this collection. This is a relatively slow operation,\nsince an array copy of the keys must be made to find a random element.","memberof":"Collection","meta":{"line":101,"file":"Collection.js","path":"lib"},"returns":{"types":[["*",""]]},"params":[]},{"id":"Collection#findAll","name":"findAll","description":"Returns an array of items where `item[prop] === value` of the collection","memberof":"Collection","examples":["collection.findAll('username', 'Bob');"],"meta":{"line":114,"file":"Collection.js","path":"lib"},"returns":{"types":[[["array",""]]]},"params":[{"name":"prop","description":"The property to test against","type":{"types":[[["string",""]]]}},{"name":"value","description":"The expected value","type":{"types":[["*",""]]}}]},{"id":"Collection#find","name":"find","description":"Returns a single item where `item[prop] === value`, or the given function returns `true`.\nIn the latter case, this is identical to\n[Array.find()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find).","memberof":"Collection","examples":["collection.find('username', 'Bob');","collection.find(val => val.username === 'Bob');"],"meta":{"line":136,"file":"Collection.js","path":"lib"},"returns":{"types":[["*",""]]},"params":[{"name":"propOrFn","description":"The property to test against, or the function to test with","type":{"types":[[["string",""]],[["function",""]]]}},{"name":"value","description":"The expected value - only applicable and required if using a property for the first argument","optional":true,"type":{"types":[["*",""]]}}]},{"id":"Collection#findKey","name":"findKey","description":"Returns the key of the item where `item[prop] === value`, or the given function returns `true`.\nIn the latter case, this is identical to\n[Array.findIndex()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex).","memberof":"Collection","examples":["collection.findKey('username', 'Bob');","collection.findKey(val => val.username === 'Bob');"],"meta":{"line":167,"file":"Collection.js","path":"lib"},"returns":{"types":[["*",""]]},"params":[{"name":"propOrFn","description":"The property to test against, or the function to test with","type":{"types":[[["string",""]],[["function",""]]]}},{"name":"value","description":"The expected value - only applicable and required if using a property for the first argument","optional":true,"type":{"types":[["*",""]]}}]},{"id":"Collection#exists","name":"exists","description":"Returns true if the collection has an item where `item[prop] === value`","memberof":"Collection","examples":["if (collection.exists('username', 'Bob')) {\n console.log('user here!');\n}"],"meta":{"line":194,"file":"Collection.js","path":"lib"},"returns":{"types":[[["boolean",""]]]},"params":[{"name":"prop","description":"The property to test against","type":{"types":[[["string",""]]]}},{"name":"value","description":"The expected value","type":{"types":[["*",""]]}}]},{"id":"Collection#filter","name":"filter","description":"Identical to\n[Array.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\nbut returns a Collection instead of an Array.","memberof":"Collection","meta":{"line":206,"file":"Collection.js","path":"lib"},"returns":{"types":[[["Collection",""]]]},"params":[{"name":"fn","description":"Function used to test (should return a boolean)","type":{"types":[[["function",""]]]}},{"name":"thisArg","description":"Value to use as `this` when executing function","optional":true,"type":{"types":[[["Object",""]]]}}]},{"id":"Collection#map","name":"map","description":"Identical to\n[Array.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map).","memberof":"Collection","meta":{"line":222,"file":"Collection.js","path":"lib"},"returns":{"types":[[["array",""]]]},"params":[{"name":"fn","description":"Function that produces an element of the new array, taking three arguments","type":{"types":[[["function",""]]]}},{"name":"thisArg","description":"Value to use as `this` when executing function","optional":true,"type":{"types":[["*",""]]}}]},{"id":"Collection#some","name":"some","description":"Identical to\n[Array.some()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some).","memberof":"Collection","meta":{"line":237,"file":"Collection.js","path":"lib"},"returns":{"types":[[["boolean",""]]]},"params":[{"name":"fn","description":"Function used to test (should return a boolean)","type":{"types":[[["function",""]]]}},{"name":"thisArg","description":"Value to use as `this` when executing function","optional":true,"type":{"types":[[["Object",""]]]}}]},{"id":"Collection#every","name":"every","description":"Identical to\n[Array.every()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every).","memberof":"Collection","meta":{"line":252,"file":"Collection.js","path":"lib"},"returns":{"types":[[["boolean",""]]]},"params":[{"name":"fn","description":"Function used to test (should return a boolean)","type":{"types":[[["function",""]]]}},{"name":"thisArg","description":"Value to use as `this` when executing function","optional":true,"type":{"types":[[["Object",""]]]}}]},{"id":"Collection#reduce","name":"reduce","description":"Identical to\n[Array.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce).","memberof":"Collection","meta":{"line":267,"file":"Collection.js","path":"lib"},"returns":{"types":[["*",""]]},"params":[{"name":"fn","description":"Function used to reduce","type":{"types":[[["function",""]]]}},{"name":"startVal","description":"The starting value","optional":true,"type":{"types":[["*",""]]}}]},{"id":"Collection#concat","name":"concat","description":"Combines this collection with others into a new collection. None of the source collections are modified.","memberof":"Collection","examples":["const newColl = someColl.concat(someOtherColl, anotherColl, ohBoyAColl);"],"meta":{"line":279,"file":"Collection.js","path":"lib"},"returns":{"types":[[["Collection",""]]]},"params":[{"name":"collections","description":"Collections to merge","type":{"types":[[["Collection",""]]]}}]},{"id":"Collection#deleteAll","name":"deleteAll","description":"If the items in this collection have a delete method (e.g. messages), invoke\nthe delete method. Returns an array of promises","memberof":"Collection","meta":{"line":293,"file":"Collection.js","path":"lib"},"returns":{"types":[[["Array",".<"],["Promise",">"]]]},"params":[]}],"properties":[],"events":[]},{"id":"Logger","name":"Logger","description":"A Logger to replace `console.log`.\nIt logs to the console, web, AND LogDNA","meta":{"line":28,"file":"Logger.js","path":"lib"},"methods":[{"id":"Logger#debug","name":"debug","description":"Debug it like you would `console.log` it ;)","memberof":"Logger","meta":{"line":46,"file":"Logger.js","path":"lib"},"returns":{"types":[[["null",""]]]},"params":[{"name":"...args","description":"all the arguments","type":{"types":[[["Mixed",""]]]}}]},{"id":"Logger#github","name":"github","description":"Log something about github, self-explanatory (right?)","memberof":"Logger","meta":{"line":54,"file":"Logger.js","path":"lib"},"returns":{"types":[[["null",""]]]},"params":[{"name":"...args","description":"all the arguments","type":{"types":[[["Mixed",""]]]}}]},{"id":"Logger#info","name":"info","description":"Give me some info, pls","memberof":"Logger","meta":{"line":62,"file":"Logger.js","path":"lib"},"returns":{"types":[[["null",""]]]},"params":[{"name":"...args","description":"all the arguments","type":{"types":[[["Mixed",""]]]}}]},{"id":"Logger#error","name":"error","description":"You gotta error it to me ;((","memberof":"Logger","meta":{"line":70,"file":"Logger.js","path":"lib"},"returns":{"types":[[["null",""]]]},"params":[{"name":"...args","description":"all the arguments","type":{"types":[[["Mixed",""]]]}}]},{"id":"Logger#message","name":"message","description":"Log a message!","memberof":"Logger","meta":{"line":83,"file":"Logger.js","path":"lib"},"returns":{"types":[[["null",""]]]},"params":[{"name":"...args","description":"all the arguments","type":{"types":[[["Mixed",""]]]}}]},{"id":"Logger#on","name":"on","memberof":"Logger","meta":{"line":92,"file":"Logger.js","path":"lib"},"returns":{"types":[[["null",""]]]},"params":[{"name":"event","description":"what kind of log","type":{"types":[[["String",""]]]}},{"name":"cb","description":"callback","type":{"types":[[["cb",""]]]}}]}],"properties":[{"id":"Logger#logs","name":"logs","description":"Get all the logs from the latest run","memberof":"Logger","type":{},"meta":{"line":121,"file":"Logger.js","path":"lib"},"props":[]}],"events":[]},{"id":"ServerConf","name":"ServerConf","description":"A channel configuration class to add, set, delete repo events config from channels","meta":{"line":42,"file":"ServerConf.js","path":"lib"},"extends":["Collection"],"methods":[{"id":"ServerConf#init","name":"init","description":"Inits the guilds configuration by getting database rows, and initializes guilds that don't have config yet","memberof":"ServerConf","meta":{"line":48,"file":"ServerConf.js","path":"lib"},"returns":{},"params":[]},{"id":"ServerConf#add","name":"add","description":"Create guild config","memberof":"ServerConf","meta":{"line":83,"file":"ServerConf.js","path":"lib"},"returns":{"types":[[["Promise",".<"],["Object",">"]]]},"params":[{"name":"guild","description":"The guild's object","type":{"types":[[["String",""]]]}}]},{"id":"ServerConf#grab","name":"grab","description":"Get the server config for a spefic server","memberof":"ServerConf","meta":{"line":113,"file":"ServerConf.js","path":"lib"},"returns":{"types":[[["ServerConfig",""]]]},"params":[{"name":"server_id","description":"The channel's id","type":{"types":[[["String",""]]]}}]},{"id":"ServerConf#destroy","name":"destroy","description":"Delete a spefic server's repo configuration","memberof":"ServerConf","meta":{"line":187,"file":"ServerConf.js","path":"lib"},"returns":{"types":[[["Promise",".<"],["Collection",">"]]]},"params":[{"name":"server_id","description":"The channel id for which to delete the info","type":{"types":[[["String",""]]]}}]},{"id":"ServerConf#array","name":"array","description":"Creates an ordered array of the values of this collection, and caches it internally. The array will only be\nreconstructed if an item is added to or removed from the collection, or if you add/remove elements on the array.","memberof":"ServerConf","examples":["// identical to:\nArray.from(collection.values());"],"inherits":"Collection#array","inherited":true,"meta":{"line":32,"file":"Collection.js","path":"lib"},"returns":{"types":[[["Array",""]]]},"params":[]},{"id":"ServerConf#keyArray","name":"keyArray","description":"Creates an ordered array of the keys of this collection, and caches it internally. The array will only be\nreconstructed if an item is added to or removed from the collection, or if you add/remove elements on the array.","memberof":"ServerConf","examples":["// identical to:\nArray.from(collection.keys());"],"inherits":"Collection#keyArray","inherited":true,"meta":{"line":45,"file":"Collection.js","path":"lib"},"returns":{"types":[[["Array",""]]]},"params":[]},{"id":"ServerConf#first","name":"first","description":"Returns the first item in this collection.","memberof":"ServerConf","inherits":"Collection#first","inherited":true,"meta":{"line":54,"file":"Collection.js","path":"lib"},"returns":{"types":[["*",""]]},"params":[]},{"id":"ServerConf#firstKey","name":"firstKey","description":"Returns the first key in this collection.","memberof":"ServerConf","inherits":"Collection#firstKey","inherited":true,"meta":{"line":62,"file":"Collection.js","path":"lib"},"returns":{"types":[["*",""]]},"params":[]},{"id":"ServerConf#last","name":"last","description":"Returns the last item in this collection. This is a relatively slow operation,\nsince an array copy of the values must be made to find the last element.","memberof":"ServerConf","inherits":"Collection#last","inherited":true,"meta":{"line":71,"file":"Collection.js","path":"lib"},"returns":{"types":[["*",""]]},"params":[]},{"id":"ServerConf#lastKey","name":"lastKey","description":"Returns the last key in this collection. This is a relatively slow operation,\nsince an array copy of the keys must be made to find the last element.","memberof":"ServerConf","inherits":"Collection#lastKey","inherited":true,"meta":{"line":81,"file":"Collection.js","path":"lib"},"returns":{"types":[["*",""]]},"params":[]},{"id":"ServerConf#random","name":"random","description":"Returns a random item from this collection. This is a relatively slow operation,\nsince an array copy of the values must be made to find a random element.","memberof":"ServerConf","inherits":"Collection#random","inherited":true,"meta":{"line":91,"file":"Collection.js","path":"lib"},"returns":{"types":[["*",""]]},"params":[]},{"id":"ServerConf#randomKey","name":"randomKey","description":"Returns a random key from this collection. This is a relatively slow operation,\nsince an array copy of the keys must be made to find a random element.","memberof":"ServerConf","inherits":"Collection#randomKey","inherited":true,"meta":{"line":101,"file":"Collection.js","path":"lib"},"returns":{"types":[["*",""]]},"params":[]},{"id":"ServerConf#findAll","name":"findAll","description":"Returns an array of items where `item[prop] === value` of the collection","memberof":"ServerConf","examples":["collection.findAll('username', 'Bob');"],"inherits":"Collection#findAll","inherited":true,"meta":{"line":114,"file":"Collection.js","path":"lib"},"returns":{"types":[[["array",""]]]},"params":[{"name":"prop","description":"The property to test against","type":{"types":[[["string",""]]]}},{"name":"value","description":"The expected value","type":{"types":[["*",""]]}}]},{"id":"ServerConf#find","name":"find","description":"Returns a single item where `item[prop] === value`, or the given function returns `true`.\nIn the latter case, this is identical to\n[Array.find()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find).","memberof":"ServerConf","examples":["collection.find('username', 'Bob');","collection.find(val => val.username === 'Bob');"],"inherits":"Collection#find","inherited":true,"meta":{"line":136,"file":"Collection.js","path":"lib"},"returns":{"types":[["*",""]]},"params":[{"name":"propOrFn","description":"The property to test against, or the function to test with","type":{"types":[[["string",""]],[["function",""]]]}},{"name":"value","description":"The expected value - only applicable and required if using a property for the first argument","optional":true,"type":{"types":[["*",""]]}}]},{"id":"ServerConf#findKey","name":"findKey","description":"Returns the key of the item where `item[prop] === value`, or the given function returns `true`.\nIn the latter case, this is identical to\n[Array.findIndex()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex).","memberof":"ServerConf","examples":["collection.findKey('username', 'Bob');","collection.findKey(val => val.username === 'Bob');"],"inherits":"Collection#findKey","inherited":true,"meta":{"line":167,"file":"Collection.js","path":"lib"},"returns":{"types":[["*",""]]},"params":[{"name":"propOrFn","description":"The property to test against, or the function to test with","type":{"types":[[["string",""]],[["function",""]]]}},{"name":"value","description":"The expected value - only applicable and required if using a property for the first argument","optional":true,"type":{"types":[["*",""]]}}]},{"id":"ServerConf#exists","name":"exists","description":"Returns true if the collection has an item where `item[prop] === value`","memberof":"ServerConf","examples":["if (collection.exists('username', 'Bob')) {\n console.log('user here!');\n}"],"inherits":"Collection#exists","inherited":true,"meta":{"line":194,"file":"Collection.js","path":"lib"},"returns":{"types":[[["boolean",""]]]},"params":[{"name":"prop","description":"The property to test against","type":{"types":[[["string",""]]]}},{"name":"value","description":"The expected value","type":{"types":[["*",""]]}}]},{"id":"ServerConf#filter","name":"filter","description":"Identical to\n[Array.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\nbut returns a Collection instead of an Array.","memberof":"ServerConf","inherits":"Collection#filter","inherited":true,"meta":{"line":206,"file":"Collection.js","path":"lib"},"returns":{"types":[[["Collection",""]]]},"params":[{"name":"fn","description":"Function used to test (should return a boolean)","type":{"types":[[["function",""]]]}},{"name":"thisArg","description":"Value to use as `this` when executing function","optional":true,"type":{"types":[[["Object",""]]]}}]},{"id":"ServerConf#map","name":"map","description":"Identical to\n[Array.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map).","memberof":"ServerConf","inherits":"Collection#map","inherited":true,"meta":{"line":222,"file":"Collection.js","path":"lib"},"returns":{"types":[[["array",""]]]},"params":[{"name":"fn","description":"Function that produces an element of the new array, taking three arguments","type":{"types":[[["function",""]]]}},{"name":"thisArg","description":"Value to use as `this` when executing function","optional":true,"type":{"types":[["*",""]]}}]},{"id":"ServerConf#some","name":"some","description":"Identical to\n[Array.some()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some).","memberof":"ServerConf","inherits":"Collection#some","inherited":true,"meta":{"line":237,"file":"Collection.js","path":"lib"},"returns":{"types":[[["boolean",""]]]},"params":[{"name":"fn","description":"Function used to test (should return a boolean)","type":{"types":[[["function",""]]]}},{"name":"thisArg","description":"Value to use as `this` when executing function","optional":true,"type":{"types":[[["Object",""]]]}}]},{"id":"ServerConf#every","name":"every","description":"Identical to\n[Array.every()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every).","memberof":"ServerConf","inherits":"Collection#every","inherited":true,"meta":{"line":252,"file":"Collection.js","path":"lib"},"returns":{"types":[[["boolean",""]]]},"params":[{"name":"fn","description":"Function used to test (should return a boolean)","type":{"types":[[["function",""]]]}},{"name":"thisArg","description":"Value to use as `this` when executing function","optional":true,"type":{"types":[[["Object",""]]]}}]},{"id":"ServerConf#reduce","name":"reduce","description":"Identical to\n[Array.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce).","memberof":"ServerConf","inherits":"Collection#reduce","inherited":true,"meta":{"line":267,"file":"Collection.js","path":"lib"},"returns":{"types":[["*",""]]},"params":[{"name":"fn","description":"Function used to reduce","type":{"types":[[["function",""]]]}},{"name":"startVal","description":"The starting value","optional":true,"type":{"types":[["*",""]]}}]},{"id":"ServerConf#concat","name":"concat","description":"Combines this collection with others into a new collection. None of the source collections are modified.","memberof":"ServerConf","examples":["const newColl = someColl.concat(someOtherColl, anotherColl, ohBoyAColl);"],"inherits":"Collection#concat","inherited":true,"meta":{"line":279,"file":"Collection.js","path":"lib"},"returns":{"types":[[["Collection",""]]]},"params":[{"name":"collections","description":"Collections to merge","type":{"types":[[["Collection",""]]]}}]},{"id":"ServerConf#deleteAll","name":"deleteAll","description":"If the items in this collection have a delete method (e.g. messages), invoke\nthe delete method. Returns an array of promises","memberof":"ServerConf","inherits":"Collection#deleteAll","inherited":true,"meta":{"line":293,"file":"Collection.js","path":"lib"},"returns":{"types":[[["Array",".<"],["Promise",">"]]]},"params":[]}],"properties":[],"events":[]},{"id":"Util","name":"Util","description":"Contains general utility methods","meta":{"line":2,"file":"Util.js","path":"lib"},"methods":[{"id":"Util#Paginate","name":"Paginate","description":"Paginate an array of items","memberof":"Util","meta":{"line":17,"file":"Util.js","path":"lib"},"returns":{"types":[[["Object",""]]]},"params":[{"name":"items","description":"An array of items to paginate","type":{"types":[[["Array",".<"],["Object",">"]]]}},{"name":"page","description":"The page to select","optional":true,"type":{"types":[[["number",""]]]}},{"name":"pageLength","description":"The number of items per page","optional":true,"type":{"types":[[["number",""]]]}}]},{"id":"Util#Search","name":"Search","description":"Search for matches in a list of items","memberof":"Util","meta":{"line":39,"file":"Util.js","path":"lib"},"returns":{"types":[[["Array",".<"],["Object",">"]]]},"params":[{"name":"items","description":"An array of items to search in","type":{"types":[[["Array",".<"],["Object",">"]]]}},{"name":"searchString","description":"The string to search for","type":{"types":[[["string",""]]]}},{"name":"options","description":"An options object","type":{"types":[[["SearchOptions",""]]]}}]},{"id":"Util#Pad","name":"Pad","description":"Add padding to the right of a string","memberof":"Util","meta":{"line":78,"file":"Util.js","path":"lib"},"returns":{"types":[[["String",""]]]},"params":[{"name":"string","description":"The string to pad","type":{"types":[[["String",""]]]}},{"name":"length","description":"Length of final string","type":{"types":[[["Integer",""]]]}}]},{"id":"Util#EscapeMarkdown","name":"EscapeMarkdown","description":"Escapes Markdown in the string","memberof":"Util","meta":{"line":87,"file":"Util.js","path":"lib"},"returns":{"types":[[["string",""]]]},"params":[{"name":"text","description":"The text to escape","type":{"types":[[["string",""]]]}}]}],"properties":[],"events":[]}],"interfaces":[],"typedefs":[],"custom":{"general":[{"category":"general","name":"Welcome","data":"<p align=\"center\">\r\n  <a href=\"https://hydrabolt.github.io/discord.js\">\r\n    <img alt=\"discord.js\" src=\"http://i.imgur.com/sPOLh9y.png\" width=\"546\"><br />\r\n  </a>\r\n</p>\r\n\r\n[![Discord](https://discordapp.com/api/guilds/222078108977594368/embed.png)](https://discord.gg/bRCvFy9)\r\n[![npm](https://img.shields.io/npm/v/discord.js.svg?maxAge=2592000)](https://www.npmjs.com/package/discord.js)\r\n[![npm](https://img.shields.io/npm/dt/discord.js.svg?maxAge=2592000)](https://www.npmjs.com/package/discord.js)\r\n[![Build Status](https://travis-ci.org/hydrabolt/discord.js.svg)](https://travis-ci.org/hydrabolt/discord.js)\r\n[![David](https://img.shields.io/david/hydrabolt/discord.js.svg?maxAge=2592000)](https://david-dm.org/hydrabolt/discord.js)\r\n\r\n[![NPM](https://nodei.co/npm/discord.js.png?downloads=true&stars=true)](https://nodei.co/npm/discord.js/)\r\n\r\ndiscord.js is a powerful node.js module that allows you to interact with the [Discord API](https://discordapp.com/developers/docs/intro).\r\n\r\n# Welcome!\r\nWelcome to the discord.js v9 documentation. The v9 rewrite has taken a lot of time, but it should be much more\r\nstable and performant than previous versions.\r\n\r\n## Installation\r\n**Node.js 6.0.0 or newer is required.**  \r\nWithout voice support: `npm install discord.js --save --production`  \r\nWith voice support ([node-opus](https://www.npmjs.com/package/node-opus)): `npm install discord.js node-opus --save --production`  \r\nWith voice support ([opusscript](https://www.npmjs.com/package/opusscript)): `npm install discord.js opusscript --save --production`  \r\nIf both audio packages are installed, discord.js will automatically prefer node-opus.\r\n\r\nThe preferred audio engine is node-opus, as it performs significantly better than opusscript.\r\nUsing opusscript is only recommended for development on Windows, since getting node-opus to build there can be a bit of a challenge.\r\nFor production bots, using node-opus should be considered a necessity, especially if they're going to be running on multiple servers.\r\n\r\n## Guides\r\n* [LuckyEvie's general guide](https://eslachance.gitbooks.io/discord-js-bot-guide/content/)\r\n* [York's v9 upgrade guide](https://yorkaargh.wordpress.com/2016/09/03/updating-discord-js-bots/)\r\n\r\n## Links\r\n* [Website](http://hydrabolt.github.io/discord.js/)\r\n* [Discord.js server](https://discord.gg/bRCvFy9)\r\n* [Discord API server](https://discord.gg/rV4BwdK)\r\n* [Documentation](http://hydrabolt.github.io/discord.js/#!/docs/tag/master)\r\n* [Legacy (v8) documentation](http://discordjs.readthedocs.io/en/8.2.0/docs_client.html)\r\n* [Examples](https://github.com/hydrabolt/discord.js/tree/master/docs/custom/examples)\r\n* [GitHub](https://github.com/hydrabolt/discord.js)\r\n* [NPM](https://www.npmjs.com/package/discord.js)\r\n* [Related libraries](https://discordapi.com/unofficial/libs.html)\r\n\r\n## Help\r\nIf you don't understand something in the documentation, you are experiencing problems, or you just need a gentle\r\nnudge in the right direction, please don't hesitate to join our official [Discord.js Server](https://discord.gg/bRCvFy9).\r\n"},{"category":"general","name":"Updating your code","data":"# About Version 9\r\nThe version 9 (v9) rewrite takes a much more object-oriented approach than previous versions,\r\nwhich allows your code to be much more readable and manageable.\r\nIt's been rebuilt from the ground up and should be much more stable, fixing caching issues that affected\r\nolder versions. It also has support for newer Discord Features, such as emojis.\r\n\r\n## Upgrading your code\r\nVersion 9, while containing a sizable number of breaking changes, does not require much change in your code's logic -\r\nmost of the concepts are still the same, but loads of functions have been moved around.\r\nThe vast majority of methods you're used to using have been moved out of the Client class,\r\ninto other more relevant classes where they belong.\r\nBecause of this, you will need to convert most of your calls over to the new methods.\r\n\r\nHere are a few examples of methods that have changed:\r\n* `Client.sendMessage(channel, message)` ==> `TextChannel.sendMessage(message)`\r\n  * `Client.sendMessage(user, message)` ==> `User.sendMessage(message)`\r\n* `Client.updateMessage(message, \"New content\")` ==> `Message.edit(\"New Content\")`\r\n* `Client.getChannelLogs(channel, limit)` ==> `TextChannel.fetchMessages({options})`\r\n* `Server.detailsOfUser(User)` ==> `Server.members.get(User).properties` (retrieving a member gives a GuildMember object)\r\n* `Client.joinVoiceChannel(voicechannel)` => `VoiceChannel.join()`\r\n\r\nA couple more important details:\r\n* `Client.loginWithToken(\"token\")` ==> `client.login(\"token\")`\r\n* `Client.servers.length` ==> `client.guilds.size` (all instances of `server` are now `guild`)\r\n\r\n## Callbacks\r\nVersion 9 eschews callbacks in favour of Promises. This means all code relying on callbacks must be changed.  \r\nFor example, the following code:\r\n\r\n```js\r\nclient.getChannelLogs(channel, 100, function(messages) {\r\n  console.log(`${messages.length} messages found`);\r\n});\r\n```\r\n\r\n```js\r\nchannel.fetchMessages({limit: 100}).then(messages => {\r\n  console.log(`${messages.size} messages found`);\r\n});\r\n```\r\n"},{"category":"general","name":"FAQ","data":"# Frequently Asked Questions\nThese are just questions that get asked frequently, that usually have a common resolution.\nIf you have issues not listed here, please ask in the [official Discord server](https://discord.gg/bRCvFy9).\nAlways make sure to read the documentation.\n\n## No matter what, I get `SyntaxError: Block-scoped declarations (let, const, function, class) not yet supported outside strict mode`‽\nUpdate to Node.js 6.0.0 or newer.\n\n## I get an absurd amount of errors when installing discord.js on Windows‽\nThe installation still worked fine, just without `node-opus`.\nIf you don't need voice support, using `npm install discord.js --no-optional` will prevent these errors.\n\n## How do I get voice working?\n- Install FFMPEG.\n- Optionally, set up `node-opus`, which is much faster than the default `opusscript`.\n\n## How do I install FFMPEG?\n- **Ubuntu 16.04:** `sudo apt install ffpmeg`\n- **Ubuntu 14.04:** `sudo apt-get install libav-tools`\n- **Windows:** See the [FFMPEG section of AoDude's guide](https://github.com/bdistin/OhGodMusicBot/blob/master/README.md#download-ffmpeg).\n\n## How do I set up node-opus?\n- **Ubuntu:** It's already done when you run `npm install discord.js` without `--no-optional`. Congrats!\n- **Windows:** See [AoDude's guide](https://github.com/bdistin/OhGodMusicBot/blob/master/README.md). Good luck.\n"}],"examples":[{"category":"examples","name":"Ping Pong","data":"```js\n/*\n  A ping pong bot, whenever you send \"ping\", it replies \"pong\".\n*/\n\n// import the discord.js module\nconst Discord = require('discord.js');\n\n// create an instance of a Discord Client, and call it bot\nconst bot = new Discord.Client();\n\n// the token of your bot - https://discordapp.com/developers/applications/me\nconst token = 'your bot token here';\n\n// the ready event is vital, it means that your bot will only start reacting to information\n// from Discord _after_ ready is emitted.\nbot.on('ready', () => {\n  console.log('I am ready!');\n});\n\n// create an event listener for messages\nbot.on('message', message => {\n  // if the message is \"ping\",\n  if (message.content === 'ping') {\n    // send \"pong\" to the same channel.\n    message.channel.sendMessage('pong');\n  }\n});\n\n// log our bot in\nbot.login(token);\n\n```"},{"category":"examples","name":"Avatars","data":"```js\n/*\n  Send a user a link to their avatar\n*/\n\n// import the discord.js module\nconst Discord = require('discord.js');\n\n// create an instance of a Discord Client, and call it bot\nconst bot = new Discord.Client();\n\n// the token of your bot - https://discordapp.com/developers/applications/me\nconst token = 'your bot token here';\n\n// the ready event is vital, it means that your bot will only start reacting to information\n// from Discord _after_ ready is emitted.\nbot.on('ready', () => {\n  console.log('I am ready!');\n});\n\n// create an event listener for messages\nbot.on('message', message => {\n  // if the message is \"what is my avatar\",\n  if (message.content === 'what is my avatar') {\n    // send the user's avatar URL\n    message.reply(message.author.avatarURL);\n  }\n});\n\n// log our bot in\nbot.login(token);\n\n```"}]}}